plugins {
    id 'fabric-loom' version '1.0-SNAPSHOT'
    id 'io.github.juuxel.loom-quiltflower' version '1.8.0'
    id 'io.freefair.lombok' version '6.6.1'
}

version = "${project.mod_version}+mc${project.minecraft_version}"
group = project.maven_group

repositories {
    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.
    maven {
        name "uku's repo"
        url "https://maven.uku3lig.net/releases"
    }

    // See https://docs.modrinth.com/docs/tutorials/maven/
    maven {
        name "Modrinth"
        url "https://api.modrinth.com/maven"
    }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. Not needed but you might want it
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"
    // You can import single modules like this, refer to https://github.com/FabricMC/fabric to see a list
    // modImplementation(fabricApi.module("MODULE_NAME", project.fabric_api_version))

    // ukulib, very cool library
    modApi "net.uku3lig:ukulib:${project.ukulib_version}"

    // Modrinth mods can be added as dependencies via their repository
    modRuntimeOnly "maven.modrinth:lazydfu:0.1.3"
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release.set(targetJavaVersion)
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task if it is present.
    // If you uncomment this line, sources will be generated.
    // withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}
